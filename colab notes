import tensorflow as tf
from tensorflow.keras import layers, models 
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test) = tf.keras.datasets.fashion_mnist.load_data()

y_train.shape

x_train = x_train.reshape(-1,28,28,1)
x_test = x_test.reshape(-1,28,28,1)

x_train = x_train / 255.0
x_test = x_test / 255.0

class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

model = models.Sequential([
    layers.Conv2D(32,(3,3),activation='relu', input_shape=(28,28,1)),
    layers.MaxPooling2D((2,2)),
    layers.Conv2D(64,(3,3),activation='relu'),
    layers.MaxPooling2D((2,2)),
    layers.Flatten(),
    layers.Dense(64,activation='relu'),
    layers.Dense(10,activation='softmax')
    ])

model.compile(optimizer= 'adam', #optimization algo
              loss= 'sparse_categorical_crossentropy' , #good for multiclass classification
              metrics= ['accuracy'])

history = model.fit(x_train, y_train, epochs= 5, validation_split= 0.1)
#validation_split - 

pred = model.predict(x_test)

plt.figure(figsize=(12, 5))
for i in range(5):
  plt.subplot(1, 5, i+1)
  plt.imshow(x_test[i].reshape(28, 28), cmap='gray')
  plt.title(f"Predicted: {class_names[pred[i].argmax()]} ") #argmax - get the class with highest prob
  plt.axis('off')
plt.show()
